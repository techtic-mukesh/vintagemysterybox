{%- assign product_form_id = 'product-form-' | append: pr_se_id -%}
{%- liquid
  assign pr_variants = product.variants
  assign PR_buy_pr = false
  if bk_stts.show_dynamic_checkout and isExternal == false and isProductAvailable
    assign PR_buy_pr = true
  endif
  assign choose_an_option = 'products.product.choose_an_option' | t
  assign date_in = settings.date_in
  assign class_frm = 't4s-form__product has--form__swatch'
  if isProductDefault
    assign class_frm = 't4s-form__product'
  endif
  if arr_properties.size > 0 and isProductAvailable
    assign class_frm = class_frm | append: ' has--properties'
  endif
  if settings.sticky_atc and type == 'main'
    assign class_frm = class_frm | append: ' is--main-sticky'
  else
    assign class_frm = class_frm | append: ' is--atc-sticky'
  endif

  assign color_swatch = 'disabled-'
  assign color_mode = bk_stts.color_mode
  assign selector_mode = bk_stts.selector_mode
  assign stt_color_ck = settings.color_ck | default: ';'
  assign color_ck = stt_color_ck | append: ',color,colors,couleur,colour' | remove: ';,'
  assign get_color = color_ck | downcase | replace: ' ,', ',' | replace: ', ', ',' | split: ',' | uniq
  assign color_mode_list = 'color, color is-sw-cl__round, variant_image, variant_image is-sw-cl__round' | split: ', '
  if color_mode_list contains color_mode
    assign color_swatch = 'is-sw__color '
  endif
  assign current_variant_available = current_variant.available
  assign use_incoming_mess = settings.use_incoming_mess
  assign current_variant_incoming = false
  assign current_inventory_quantity = current_variant.inventory_quantity
  if current_inventory_quantity <= 0 and current_variant.inventory_management == 'shopify' and current_variant.incoming
    assign current_variant_incoming = true
  endif
  if pos_sizeg == '1'
    assign html_sizeg = ''
  endif
  if current_variant.inventory_management != null and current_inventory_quantity > 0 and current_variant.inventory_policy != 'continue'
    assign max_qty = current_inventory_quantity
  else
    assign max_qty = 9999
  endif
  if current_variant.quantity_rule.max and max_qty > current_variant.quantity_rule.max
    assign max_qty = current_variant.quantity_rule.max
  endif
  if color_mode contains 'color' or color_mode contains 'variant'
    assign show_tooltip = ''
  else
    assign show_tooltip = '-off'
  endif
-%}
{%- liquid
  assign gift_card_recipient_feature_active = false
  if bk_stts.show_gift_card_recipient and product.gift_card?
    assign gift_card_recipient_feature_active = true
    assign PR_buy_pr = false
  endif
-%}

{%- if color_mode == 'dropdown' or selector_mode == 'dropdown' -%}
  <link rel="stylesheet" href="{{ 'base_drop.min.css' | asset_url }}" media="all">
{%- endif -%}

<div
  class="t4s-product-form__variants is-no-pick__{{ PR_no_pick }}{% if PR_buy_pr %} is-payment-btn-true t4s-payment-button t4s-btn-color-{{ bk_stts.button_color_payment }}{% endif %}  is-remove-soldout-{{ remove_soldout }} is-btn-full-width__{{ bk_stts.btn_atc_full }} is-btn-atc-txt-{{ bk_stts.btn_txt }} is-btn-ck-txt-{{ bk_stts.btn_txt2 }} is--fist-ratio-{{ is_fit_ratio_img }}"
  style="{% if is_fit_ratio_img %};--fit-ratio-img:{{ first_ratio_img }};{% endif %} --wishlist-color: {{ bk_stts.wishlist_color }};--wishlist-hover-color: {{ bk_stts.wishlist_color_hover }};--wishlist-active-color: {{ bk_stts.wishlist_color_active }};--compare-color: {{ bk_stts.compare_color }};--compare-hover-color: {{ bk_stts.compare_color_hover }};--compare-active-color: {{ bk_stts.compare_color_active }};"
  {{ shopify_attributes }}
>
  <div data-callBackVariant id="t4s-callBackVariant{{ product_form_id }}">
    {%- form 'product',
      product,
      id: product_form_id,
      data-productid: product.id,
      class: class_frm,
      novalidate: 'novalidate',
      data-type: 'add-to-cart-form',
      data-disable-swatch: isProductDefault
    -%}
      {{- form | payment_terms -}}

      {%- if isProductDefault -%}
        <input name="id" value="{{ pr_variants.first.id }}" type="hidden">
        {%- if advance_pr_type != blank -%}
          {%- render 'choose_style', advance_pr_type: advance_pr_type, title: advance_label, pid: product.id -%}
        {%- endif -%}

      {%- else -%}
        {{ 'swatch.css' | asset_url | stylesheet_tag }}
        <select name="id" id="product-select-{{ pr_se_id }}" class="t4s-product__select t4s-d-none">
          {%- for variant in pr_variants -%}
            {%- if variant.available -%}
              <option
                value="{{ variant.id }}"
                data-mdid="{{ variant.featured_media.id | json }}"
                data-incoming="{{ variant.incoming }}"
                data-inventoryQuantity="{{ variant.inventory_quantity | json }}"
                data-inventoryPolicy="{{ variant.inventory_policy | json }}"
                data-nextIncomingDate="{{ variant.next_incoming_date | date: date_in }}"
                {% if variant.id == current_variant.id %}
                  selected="selected"
                {% endif %}
              >
                {{ variant.title | escape }}
              </option>
            {%- else -%}
              <option
                value="{{ variant.id }}"
                data-mdid="{{ variant.featured_media.id | json }}"
                data-incoming="{{ variant.incoming }}"
                data-inventoryQuantity="{{ variant.inventory_quantity | json }}"
                data-inventoryPolicy="{{ variant.inventory_policy | json }}"
                data-nextIncomingDate="{{ variant.next_incoming_date | date: date_in }}"
                {% if remove_soldout %}
                  disabled="disabled"
                {% endif %}
                class="is--sold-out"
              >
                {{ variant.title | escape }}
              </option>
            {%- endif -%}
          {%- endfor -%}
        </select>

        <div class="t4s-swatch t4s-color-mode__{{ color_mode }} t4s-color-size__{{ bk_stts.color_size }} t4s-selector-mode__{{ selector_mode }}">
          {%- if advance_pr_type != blank -%}
            {%- render 'choose_style', advance_pr_type: advance_pr_type, title: advance_label, pid: product.id -%}
          {%- endif -%}

          {%- for option in product.options_with_values -%}
            {%- liquid
              if option.values.size == 1
                assign selected_value = option.values.first
              else
                assign option_index = 'option' | append: forloop.index
                assign selected_value = current_variant[option_index]
              endif
              assign option_name = option.name
              assign name_downcase = option_name | downcase
            -%}

            {%- if get_color contains name_downcase -%}
              <div
                data-swatch-option
                data-id="{{ forloop.index0 }}"
                class="t4s-swatch__option is-t4s-style__color is-t4s-name__{{ option_name | handle }} {% cycle 'is--first-color', '', '' %}"
              >
                <h4 class="t4s-swatch__title">
                  <span>
                    {{- option_name }}:

                    <span data-current-value class="t4s-dib t4s-swatch__current">
                      {{- selected_value | default: choose_an_option -}}
                    </span></span
                  >
                  {%- if name_sizeg == name_downcase %}{{ html_sizeg }}{% endif %}
                </h4>
                <div data-swatch-list class="t4s-swatch__list">
                  {%- if color_mode != 'dropdown' -%}
                    {%- for value in option.values -%}
                      <div
                        data-swatch-item
                        data-tooltip{{ show_tooltip }}="top"
                        title="{{ value | escape }}"
                        class="t4s-swatch__item {{ color_swatch }}bg_color_{{ value | handle }} lazyloadt4s{% if selected_value == value %} is--selected{% endif %}"
                        data-value="{{ value | escape }}"
                      >
                        {{ value }}
                      </div>
                    {%- endfor -%}

                  {%- else -%}
                    <button
                      type="button"
                      data-dropdown-open
                      data-position="bottom-end"
                      data-id="t4s_nt_{{ pr_se_id }}{{ forloop.index }}"
                    >
                      <span data-current-value>{{ selected_value | default: choose_an_option }}</span>
                      <svg class="t4s-icon-select-arrow" role="presentation" viewBox="0 0 19 12">
                        <use xlink:href="#t4s-select-arrow"></use>
                      </svg>
                    </button>
                    <div
                      data-dropdown-wrapper
                      class="t4s-dropdown__wrapper t4s-current-scrollbar"
                      id="t4s_nt_{{ pr_se_id }}{{ forloop.index }}"
                    >
                      <div class="t4s-drop-arrow"></div>
                      <div class="t4s-dropdown__header">
                        <span class="t4s-dropdown__title">
                          {{- option_name }}:
                          <span data-current-value>{{ selected_value | default: choose_an_option }}</span></span
                        >
                        <button type="button" data-dropdown-close aria-label="{{ 'general.aria.close' | t }}">
                          <svg role="presentation" class="t4s-iconsvg-close" viewBox="0 0 16 14">
                            <path d="M15 0L1 14m14 0L1 0" stroke="currentColor" fill="none" fill-rule="evenodd"></path>
                          </svg>
                        </button>
                      </div>
                      <div class="t4s-dropdown__content">
                        {%- for value in option.values -%}
                          <div
                            data-swatch-item
                            data-dropdown-off
                            class="t4s-swatch__item t4s-truncate {{ color_swatch }}bg_color_{{ value | handle }} lazyloadt4s{% if selected_value == value %} is--selected{% endif %}"
                            data-value="{{ value | escape }}"
                          >
                            {{ value }}
                          </div>
                        {%- endfor -%}
                      </div>
                    </div>
                  {%- endif -%}
                </div>
              </div>

            {%- else -%}
              <div
                data-swatch-option
                data-id="{{ forloop.index0 }}"
                class="t4s-swatch__option is-t4s-name__{{ option_name | handle }}"
              >
                <h4 class="t4s-swatch__title">
                  <span>
                    {{- option_name }}:

                    <span data-current-value class="t4s-dib t4s-swatch__current">
                      {{- selected_value | default: choose_an_option -}}
                    </span></span
                  >
                  {%- if name_sizeg == name_downcase %}{{ html_sizeg }}{% endif %}
                </h4>
                <div class="t4s-swatch__list    {%- if option.values.size == 1 -%} sizelabel-available {% endif %}">
                  {%- if selector_mode != 'dropdown' -%}
                    {%- for value in option.values -%}
                      <div
                        data-swatch-item
                        class="t4s-swatch__item{% if selected_value == value %} is--selected{% endif %}"
                        data-value="{{ value | escape }}"
                      >
                        {{ value }}
                      </div>

                      {%- if option.values.size == 1 -%}
                        {%- if product.type == 'Mystery Box' -%}
                        {% else %}
                          {% if product.tags contains 'Mens' %}
                            <span class="sizeonlabel men">Mens</span>
                          {% endif %}
                          {% if product.tags contains 'Womens' %}
                            <span class="sizeonlabel women">Womens</span>
                          {% endif %}
                        {% endif %}
                      {% endif %}
                    {%- endfor -%}

                  {%- else -%}
                    <button
                      type="button"
                      data-dropdown-open
                      data-position="bottom-end"
                      data-id="t4s_nt_{{ pr_se_id }}{{ forloop.index }}"
                    >
                      <span data-current-value>{{ selected_value | default: choose_an_option }}</span>
                      <svg class="t4s-icon-select-arrow" role="presentation" viewBox="0 0 19 12">
                        <use xlink:href="#t4s-select-arrow"></use>
                      </svg>
                    </button>
                    <div
                      data-dropdown-wrapper
                      class="t4s-dropdown__wrapper t4s-current-scrollbar"
                      id="t4s_nt_{{ pr_se_id }}{{ forloop.index }}"
                    >
                      <div class="t4s-drop-arrow"></div>
                      <div class="t4s-dropdown__header">
                        <span class="t4s-dropdown__title">
                          {{- option_name }}:
                          <span data-current-value>{{ selected_value | default: choose_an_option }}</span></span
                        >
                        <button type="button" data-dropdown-close aria-label="{{ 'general.aria.close' | t }}">
                          <svg role="presentation" class="t4s-iconsvg-close" viewBox="0 0 16 14">
                            <path d="M15 0L1 14m14 0L1 0" stroke="currentColor" fill="none" fill-rule="evenodd"></path>
                          </svg>
                        </button>
                      </div>
                      <div class="t4s-dropdown__content">
                        {%- for value in option.values -%}
                          <div
                            data-swatch-item
                            data-dropdown-off
                            class="t4s-swatch__item t4s-truncate{% if selected_value == value %} is--selected{% endif %}"
                            data-value="{{ value | escape }}"
                          >
                            {{ value }}
                          </div>
                        {%- endfor -%}
                      </div>
                    </div>
                  {%- endif -%}
                </div>
              </div>
            {%- endif -%}
          {%- endfor -%}
        </div>
      {%- endif -%}

      {%- liquid
        if arr_properties.size > 0 and isProductAvailable
          render 'frm_properties', arr_properties: arr_properties, product: product
        endif
      -%}

      {%- if use_incoming_mess
        and current_variant_incoming
        and pr_variants.size == 1
        and current_variant.next_incoming_date != blank
      -%}
        {%- assign format_date = current_variant.next_incoming_date | date: date_in -%}
        <div class="t4s-incoming__mess">
          {% if current_variant_available -%}
            {{- 'products.product_single.will_not_ship_until_html' | t: date: format_date -}}
          {%- else -%}
            {{- 'products.product_single.will_be_in_stock_after_html' | t: date: format_date -}}
          {%- endif %}
        </div>
      {%- elsif use_incoming_mess and pr_variants.size > 1 -%}
        {%- liquid
          assign format_date = current_variant.next_incoming_date | date: date_in
          unless format_date
            assign format_date = '19041994'
          endunless
        -%}
        <div
          data-incoming__mess
          class="t4s-incoming__mess"
          {% unless current_variant_incoming %}
            hidden
          {% endunless %}
        >
          <span
            data-incoming-available
            {% if current_variant_available == false or current_variant == blank %}
              style="display:none"
            {% endif %}
          >
            {{- 'products.product_single.will_not_ship_until_html' | t: date: format_date -}}</span
          ><span
            data-incoming-soldout
            {% if current_variant_available or current_variant == blank %}
              style="display: none"
            {% endif %}
          >
            {{- 'products.product_single.will_be_in_stock_after_html' | t: date: format_date -}}
          </span>
        </div>
      {%- endif -%}
      {{ 'button-style.css' | asset_url | stylesheet_tag }}
      <link href="{{ 'custom-effect.css' | asset_url }}" rel="stylesheet" media="print" onload="this.media='all'">

      {{- html_price -}}

      {%- if gift_card_recipient_feature_active -%}
        <div class="t4s-d-flex t4s-flex-wrap">
          {%- render 'gift-card-recipient-form', product: product, form: form, section: section -%}
        </div>
      {%- endif -%}
      <!-- Placement v2 -->
      <klarna-placement
        data-key="credit-promotion-standard"
        data-locale="en-SE"
        data-purchase-amount="{{ current_variant.price }}"
      ></klarna-placement>
      <!-- end Placement -->

      <script>
        document.getElementsByTagName('klarna-placement')[0].setAttribute('data-purchase-amount', variant.price);
        window.KlarnaOnsiteService = window.KlarnaOnsiteService || [];
        window.KlarnaOnsiteService.push({ eventName: 'refresh-placements' });
      </script>

      <div class="t4s-product-form__buttons" style="--pr-btn-round:{{ bk_stts.pr_btn_round }}px;">
        <div class="t4s-d-flex t4s-flex-wrap">
          {%- if isExternal -%}
            <a
              href="{{ external_link }}"
              rel="nofollow"
              target="_blank"
              class="t4s-product-form__submit t4s-truncate is--btn-external t4s-btn t4s-btn-base t4s-btn-style-{{ bk_stts.button_style }} t4s-btn-color-{{ bk_stts.button_color }} t4s-w-100 t4s-justify-content-center{% if bk_stts.button_style == 'default' or bk_stts.button_style == 'outline' %} t4s-btn-effect-{{ bk_stts.button_effect }}{% endif %} t4s-btn-loading__svg"
            >
              {%- if bk_stts.btn_icon -%}
                <svg class="t4s-btn-icon" viewBox="0 0 24 24">
                  <use xlink:href="#t4s-icon-atc"></use>
                </svg>
              {%- endif -%}
              <span class="t4s-btn-atc_text">{{ external_title }}</span>
              <span class="t4s-loading__spinner" hidden>
                <svg
                  width="16"
                  height="16"
                  hidden
                  class="t4s-svg-spinner"
                  focusable="false"
                  role="presentation"
                  viewBox="0 0 66 66"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <circle class="t4s-path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                </svg>
              </span>
            </a>
            {%- if bk_stts.enable_wishlist or bk_stts.enable_compare -%}
              <!-- render t4s_wis_cp.liquid -->
              {%- render 't4s_wis_cp', product: product, bk_stts: bk_stts -%}
            {%- endif -%}

          {%- else -%}
            {%- if bk_stts.show_qty and isProductAvailable -%}

             {% comment %} Dynamic Buy More Save More Section {% endcomment %}
             {% if bk_stts.enable_buy_more_save_more and product.type contains 'Mystery Box' %}
                <!-- Upsell options -->
                <p class="upsell-options-heading">{{ bk_stts.buy_more_heading | default: 'BUY MORE, SAVE MORE' }}</p>

                <div class="upsell-options">
                  {% assign mini_subtitle_value = product.metafields.custom.mini_subtitle
                    | remove: ' items'
                    | remove: '('
                    | remove: ')'
                    | strip
                  %}
                  {% assign mini_subtitle_number = mini_subtitle_value | plus: 0 %}

                  {% if mini_subtitle_number != 0 %}
                    {% assign multiplied_by_2 = mini_subtitle_number | times: bk_stts.option_2_quantity %}
                    {% assign multiplied_by_3 = mini_subtitle_number | times: bk_stts.option_3_quantity %}
                  {% endif %}

                  <!-- Option for 1 BOX -->
                  <label for="box1" class="upsell_btns">
                        <div class="left">
                          <input type="radio" id="box1" name="box-quantity" value="{{ bk_stts.option_1_quantity | default: 1 }}" class="radio-input">
                          <div class="content">
                            <h5>{{ bk_stts.option_1_quantity | default: 1 }} {{ bk_stts.option_label | default: 'BOX' | upcase }}</h5>
                            <div class="bar-subtitle">{{ mini_subtitle_value }} items</div>
                          </div>
                        </div>
                        <span></span>
                        <div class="price-info">
                          <span class="current-price">{{ product.price | money }}</span>
                          {% assign price_per_piece_1 = product.price | divided_by: mini_subtitle_number %}
                          <div class="per-piece">({{ shop.currency }}{{ price_per_piece_1 | divided_by: 1.0 | round: 3 | money_without_currency }} pp)</div>
                        </div>
                      </label>

                      <!-- Option for 2 BOXES -->
                      <label for="box2" class="upsell_btns">
                        <div class="left">
                          <input type="radio" id="box2" name="box-quantity" value="{{ bk_stts.option_2_quantity | default: 2 }}" class="radio-input">
                          <div class="content">
                            <h5>{{ bk_stts.option_2_quantity | default: 2 }} {{ bk_stts.option_label | default: 'BOX' | upcase }}ES 
                              {% if bk_stts.option_2_badge %}
                                <span class="upsell_badge {{ bk_stts.option_2_badge_style | default: 'green' }}">{{ bk_stts.option_2_badge }}</span>
                              {% endif %}
                            </h5>
                            <div class="bar-subtitle">{{ multiplied_by_2 }} items</div>
                          </div>
                        </div>
                        {% if bk_stts.option_2_discount > 0 %}
                          <span class="discount-badge">{{ bk_stts.option_2_discount }}% OFF</span>
                        {% endif %}
                        <div class="price-info">
                          {% assign price_2box = product.price | times: bk_stts.option_2_quantity %}
                          {% assign compare_at_price_2box = product.compare_at_price | times: bk_stts.option_2_quantity %}
                          {% assign Second_discount = price_2box | times: bk_stts.option_2_discount | divided_by: 100 %}
                          {% assign FinalSecond_price = price_2box | minus: Second_discount %}
                          {% assign total_items_2 = mini_subtitle_number | times: bk_stts.option_2_quantity %}
                          {% assign price_per_piece_2 = FinalSecond_price | divided_by: total_items_2 %}

                          {% if product.compare_at_price > product.price and bk_stts.option_2_discount > 0 %}
                            <span class="compare-price" style="text-decoration: line-through;">
                              {{ compare_at_price_2box | money }}
                            </span>
                          {% endif %}

                          <span class="current-price">{{ FinalSecond_price | money }}</span>
                          <div class="per-piece">({{ shop.currency }}{{ price_per_piece_2 | divided_by: 1.0 | round: 3 | money_without_currency }} pp)</div>
                        </div>
                        
                      {% if bk_stts.option_2_free_item and product.metafields.custom.feature_free_piece %}
                        {% if bk_stts.option_2_quantity == 2 %}
                          <div class="free-piech_items">
                            {% if bk_stts.free_item_image %}
                              <img src="{{ bk_stts.free_item_image | img_url: '300x300' }}" alt="Free Item">
                            {% endif %}
                            <p>+ FREE {{ bk_stts.free_item_text | default: 'CARHARTT PIECE' }}</p>
                          </div>
                        {% endif %}
                      {% endif %}

                      </label>

                      <!-- Option for 3 BOXES -->
                      <label for="box3" class="upsell_btns">
                        <div class="left">
                          <input type="radio" id="box3" name="box-quantity" value="{{ bk_stts.option_3_quantity | default: 3 }}" class="radio-input">
                          <div class="content">
                            <h5>{{ bk_stts.option_3_quantity | default: 3 }} {{ bk_stts.option_label | default: 'BOX' | upcase }}ES 
                              {% if bk_stts.option_3_badge %}
                                <span class="upsell_badge {{ bk_stts.option_3_badge_style | default: '' }}">{{ bk_stts.option_3_badge }}</span>
                              {% endif %}
                            </h5>
                            <div class="bar-subtitle">{{ multiplied_by_3 }} items</div>
                          </div>
                        </div>
                        {% if bk_stts.option_3_discount > 0 %}
                          <span class="discount-badge">{{ bk_stts.option_3_discount }}% OFF</span>
                        {% endif %}
                        <div class="price-info">
                          {% assign price_3box = product.price | times: bk_stts.option_3_quantity %}
                          {% assign compare_at_price_3box = product.compare_at_price | times: bk_stts.option_3_quantity %}
                          {% assign third_discount = price_3box | times: bk_stts.option_3_discount | divided_by: 100 %}
                          {% assign Finalthird_price = price_3box | minus: third_discount %}
                          {% assign total_items_3 = mini_subtitle_number | times: bk_stts.option_3_quantity %}
                          {% assign price_per_piece_3 = Finalthird_price | divided_by: total_items_3 %}

                          {% if product.compare_at_price > product.price and bk_stts.option_3_discount > 0 %}
                            <span class="compare-price" style="text-decoration: line-through;">
                              {{ compare_at_price_3box | money }}
                            </span>
                          {% endif %}
                          <span class="current-price">{{ Finalthird_price | money }}</span>
                          <div class="per-piece">({{ shop.currency }}{{ price_per_piece_3 | divided_by: 1.0 | round: 3 | money_without_currency }} pp)</div>
                        </div>

                       {% if bk_stts.option_3_free_item and product.metafields.custom.feature_free_piece %}
                          {% if bk_stts.option_3_quantity == 3 %}
                            <div class="free-piech_items">
                              {% if bk_stts.free_item_image %}
                                <img src="{{ bk_stts.free_item_image | img_url: '300x300' }}" alt="Free Item">
                              {% endif %}
                              <p>+ FREE {{ bk_stts.free_item_text | default: 'CARHARTT PIECE' }}</p>
                            </div>
                          {% endif %}
                        {% endif %}
                      </label>
                </div>
              {% endif %}

                <div data-quantity-wrapper class="t4s-quantity-wrapper t4s-product-form__qty">
                  <button
                    data-quantity-selector
                    data-decrease-qty
                    type="button"
                    class="t4s-quantity-selector is--minus"
                  >
                    <svg focusable="false" class="icon icon--minus" viewBox="0 0 10 2" role="presentation">
                      <path d="M10 0v2H0V0z" fill="currentColor"></path>
                    </svg>
                  </button>
                  <input
                    data-quantity-value
                    type="number"
                    class="t4s-quantity-input"
                    step="{{ current_variant.quantity_rule.increment | default: 1 }}"
                    min="{{ cus_qty }}"
                    max="{{ max_qty }}"
                    name="quantity"
                    value="{{ cus_qty }}"
                    size="4"
                    pattern="[0-9]*"
                    inputmode="numeric"
                  >
                  <button data-quantity-selector data-increase-qty type="button" class="t4s-quantity-selector is--plus">
                    <svg focusable="false" class="icon icon--plus" viewBox="0 0 10 10" role="presentation">
                      <path d="M6 4h4v2H6v4H4V6H0V4h4V0h2v4z" fill="currentColor" fill-rule="evenodd"></path>
                    </svg>
                  </button>
                </div>

              
            {%- else -%}
              <input type="hidden" name="quantity" value="1">
            {%- endif -%}

            {%- if bk_stts.enable_wishlist or bk_stts.enable_compare -%}
              <!-- render t4s_wis_cp.liquid -->
              {%- render 't4s_wis_cp', product: product, bk_stts: bk_stts -%}
            {%- endif -%}

            <button
              data-animation-atc='{ "ani":"{{ bk_stts.ani }}","time":{{ bk_stts.time }}000 }'
              type="submit"
              name="add"
              data-atc-form
              class="t4s-product-form__submit t4s-btn t4s-btn-base t4s-btn-style-{{ bk_stts.button_style }} t4s-btn-color-{{ bk_stts.button_color }} t4s-w-100 t4s-justify-content-center {% if bk_stts.button_style == 'default' or bk_stts.button_style == 'outline' %} t4s-btn-effect-{{ bk_stts.button_effect }}{% endif %} t4s-btn-loading__svg"
              {% unless current_variant_available %}
                aria-disabled="true"
              {% endunless -%}
              {% unless isProductAvailable %}
                disabled="disabled"
              {% endunless %}
            >
              {%- if bk_stts.btn_icon -%}
                <svg class="t4s-btn-icon" viewBox="0 0 24 24">
                  <use xlink:href="#t4s-icon-atc"></use>
                </svg>
              {%- endif -%}
              <span class="t4s-btn-atc_text">
                {%- if current_variant_available == false or isProductAvailable == false -%}
                  {{- 'products.product.sold_out' | t -}}
                {%- elsif isPreoder -%}
                  {{- 'products.product.pre_order' | t }}
                {%- else -%}
                  {{ 'products.product.add_to_cart' | t }}
                {%- endif -%}
              </span>
              <span class="t4s-loading__spinner" hidden>
                <svg
                  width="16"
                  height="16"
                  hidden
                  class="t4s-svg-spinner"
                  focusable="false"
                  role="presentation"
                  viewBox="0 0 66 66"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <circle class="t4s-path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                </svg>
              </span>
            </button>
          {%- endif -%}
        </div>
        {%- if PR_buy_pr and type != 'main_sticky' %}{{- form | payment_button -}}{% endif -%}
        {%- if settings.use_notify_me -%}
          <button
            data-class="t4s-mfp-btn-close-inline"
            data-id="t4s-pr-popup__notify-stock"
            data-storageid="notify-stock{{ current_variant.id }}"
            data-mfp-src
            data-open-mfp-ajax
            class="t4s-pr__notify-stock"
            type="button"
            data-notify-stock-btn
            data-variant-id="{{ current_variant.id }}"
            data-root-url="{{ routes.root_url }}"
            {% if current_variant_available or current_variant == blank %}
              style="display: none"
            {% endif %}
          >
            {{ 'products.notify_stock.trigger' | t }}
          </button>
        {%- endif -%}
      </div>
    {%- endform -%}

    {%- unless isProductDefault or type == 'main_sticky' -%}
      <script type="application/json" class="pr_variants_json">
        {{ product.variants | json }}
      </script>
      <script type="application/json" class="pr_options_json">
        {{ product.options_with_values | json }}
      </script>
    {%- endunless -%}

    {%- if bk_stts.ani != 'none' -%}
      <link href="{{ 'ani-atc.min.css' | asset_url }}" rel="stylesheet" media="print" onload="this.media='all'">
    {%- endif -%}
  </div>
</div>
{%- if PR_buy_pr and current_variant_available != true and type != 'main_sticky' -%}
  <style>
    #t4s-callBackVariant{{ product_form_id }} .shopify-payment-button { display: none;}
  </style>
{% endif -%}


 {% if template == 'product' %}
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      // Debug logging to verify script is running
      console.log('Script initialized');

      // Select elements
      const radioInputs = document.querySelectorAll('input[name="box-quantity"]');
      const quantityInput = document.querySelector('[data-quantity-value]');
      const labels = document.querySelectorAll('.upsell_btns');

      console.log('Quantity Input found:', quantityInput);
      console.log('Radio buttons found:', radioInputs.length);
      console.log('Labels found:', labels.length);

      // Function to manage the FREE input based on selection
      function manageFreeInput(boxCount) {
        // Check if the feature_free_piece metafield exists and is true
        {% if product.metafields.custom.feature_free_piece %}
          // Find the form element (assuming the hidden input should be in the same form)
          const form = quantityInput ? quantityInput.closest('form') : document.querySelector('form');
          
          if (!form) {
            console.error('No form found to append/remove FREE input');
            return;
          }

          // Check if FREE input already exists
          let freeInput = form.querySelector('input[name="properties[+ FREE]"]');

          if (boxCount === 2 || boxCount === 3) {
            // Add FREE input if it doesn't exist
            if (!freeInput) {
              freeInput = document.createElement('input');
              freeInput.type = 'hidden';
              freeInput.name = 'properties[+ FREE]';
              freeInput.value = 'CARHARTT PIECE';
              form.appendChild(freeInput);
              console.log('FREE input added for box count:', boxCount);
            }
          } else {
            // Remove FREE input if it exists (for box 1 or any other selection)
            if (freeInput) {
              freeInput.remove();
              console.log('FREE input removed for box count:', boxCount);
            }
          }
        {% else %}
          console.log('Feature free piece metafield not enabled, skipping FREE input management');
        {% endif %}
      }

      // Function to update active class on labels
      function updateActiveLabels(selectedValue) {
        console.log('Updating active label for value:', selectedValue);

        // Remove active class from all labels
        labels.forEach((label) => {
          label.classList.remove('active');
        });

        // Find and activate the correct label
        const activeLabel = document.querySelector(`label[for="box${selectedValue}"]`);
        if (activeLabel) {
          console.log('Setting active class on label:', activeLabel.getAttribute('for'));
          activeLabel.classList.add('active');
        } else {
          console.log('No matching label found for value:', selectedValue);
        }
      }

      // Function to update quantity
      function handleQuantityChange(boxCount) {
        console.log('Radio selection changed:', boxCount);

        // Update active labels
        updateActiveLabels(boxCount);

        // Manage FREE input based on selection
        manageFreeInput(boxCount);

        if (quantityInput) {
          // Update quantity
          quantityInput.value = boxCount;

          // Trigger native change event
          quantityInput.dispatchEvent(new Event('change', { bubbles: true }));

          console.log('Quantity updated to:', boxCount);
          // If you have a form, trigger form change event
          const form = quantityInput.closest('form');
          if (form) {
            form.dispatchEvent(new Event('change', { bubbles: true }));
          }
        }
      }

      // Add change handlers to radio buttons
      radioInputs.forEach((radio) => {
        radio.addEventListener('change', function () {
          if (this.checked) {
            const boxCount = parseInt(this.value);
            handleQuantityChange(boxCount);
          }
        });
      });

      // Optional: Add cart refresh function
      function refreshCart(quantity) {
        console.log('Attempting cart refresh with quantity:', quantity);

        // Get the current variant ID from your form
        const variantId = document.querySelector('input[name="id"]')?.value;

        if (!variantId) {
          console.error('No variant ID found');
          return;
        }

        fetch('/cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            items: [
              {
                id: variantId,
                quantity: quantity,
              },
            ],
          }),
        })
          .then((response) => response.json())
          .then((data) => {
            console.log('Cart updated successfully:', data);
            if (window.refreshCart) {
              window.refreshCart();
            }
          })
          .catch((error) => {
            console.error('Error updating cart:', error);
          });
      }

      // Optional: Add to cart button handler
      const addToCartBtn = document.querySelector('[data-add-to-cart]');
      if (addToCartBtn) {
        addToCartBtn.addEventListener('click', function (e) {
          e.preventDefault();
          const quantity = parseInt(quantityInput.value);
          refreshCart(quantity);
        });
      }

      // Set default selection to 2 boxes
      const twoBoxRadio = Array.from(radioInputs).find((radio) => parseInt(radio.value) === 2);
      if (twoBoxRadio) {
        twoBoxRadio.checked = true;
        handleQuantityChange(2);
      } else {
        console.warn('Could not find radio button for 2 boxes');
        // Fallback to first radio if 2 boxes option doesn't exist
        const defaultRadio = radioInputs[0];
        if (defaultRadio) {
          defaultRadio.checked = true;
          handleQuantityChange(parseInt(defaultRadio.value));
        }
      }

      // Add click handlers directly to labels
      labels.forEach((label) => {
        label.addEventListener('click', function () {
          const radioId = this.getAttribute('for');
          const value = radioId.replace('box', '');
          updateActiveLabels(value);
          manageFreeInput(parseInt(value));
        });
      });

      // Sync quantity input with radio buttons
      quantityInput?.addEventListener('change', function () {
        const currentValue = parseInt(this.value);
        radioInputs.forEach((radio) => {
          if (parseInt(radio.value) === currentValue) {
            radio.checked = true;
            updateActiveLabels(currentValue);
            manageFreeInput(currentValue);
          }
        });
      });
    });
  </script>
{% endif %}
